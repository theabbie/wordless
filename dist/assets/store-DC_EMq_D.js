import{r as h,g as I,R}from"./vendor-DsceW-4w.js";const x={},y=e=>{let t;const r=new Set,o=(s,l)=>{const c=typeof s=="function"?s(t):s;if(!Object.is(c,t)){const i=t;t=l??(typeof c!="object"||c===null)?c:Object.assign({},t,c),r.forEach(a=>a(t,i))}},n=()=>t,S={setState:o,getState:n,getInitialState:()=>m,subscribe:s=>(r.add(s),()=>r.delete(s)),destroy:()=>{(x?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),r.clear()}},m=t=e(o,n,S);return S},V=e=>e?y(e):y;var _={exports:{}},w={},D={exports:{}},$={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var d=h;function O(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var z=typeof Object.is=="function"?Object.is:O,C=d.useState,T=d.useEffect,W=d.useLayoutEffect,A=d.useDebugValue;function P(e,t){var r=t(),o=C({inst:{value:r,getSnapshot:t}}),n=o[0].inst,u=o[1];return W(function(){n.value=r,n.getSnapshot=t,p(n)&&u({inst:n})},[e,r,t]),T(function(){return p(n)&&u({inst:n}),e(function(){p(n)&&u({inst:n})})},[e]),A(r),r}function p(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!z(e,r)}catch{return!0}}function F(e,t){return t()}var M=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?F:P;$.useSyncExternalStore=d.useSyncExternalStore!==void 0?d.useSyncExternalStore:M;D.exports=$;var G=D.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var b=h,L=G;function U(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var k=typeof Object.is=="function"?Object.is:U,B=L.useSyncExternalStore,H=b.useRef,J=b.useEffect,K=b.useMemo,N=b.useDebugValue;w.useSyncExternalStoreWithSelector=function(e,t,r,o,n){var u=H(null);if(u.current===null){var f={hasValue:!1,value:null};u.current=f}else f=u.current;u=K(function(){function S(i){if(!m){if(m=!0,s=i,i=o(i),n!==void 0&&f.hasValue){var a=f.value;if(n(a,i))return l=a}return l=i}if(a=l,k(s,i))return a;var E=o(i);return n!==void 0&&n(a,E)?(s=i,a):(s=i,l=E)}var m=!1,s,l,c=r===void 0?null:r;return[function(){return S(t())},c===null?void 0:function(){return S(c())}]},[t,r,o,n]);var v=B(e,u[0],u[1]);return J(function(){f.hasValue=!0,f.value=v},[v]),N(v),v};_.exports=w;var Q=_.exports;const X=I(Q),j={},{useDebugValue:Y}=R,{useSyncExternalStoreWithSelector:Z}=X;let g=!1;const q=e=>e;function ee(e,t=q,r){(j?"production":void 0)!=="production"&&r&&!g&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),g=!0);const o=Z(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,r);return Y(o),o}const te=e=>{(j?"production":void 0)!=="production"&&typeof e!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t=typeof e=="function"?V(e):e,r=(o,n)=>ee(t,o,n);return Object.assign(r,t),r},ne=e=>te;export{ne as c};
